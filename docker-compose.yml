version: '2'

services:
  adminer:
    image: adminer
    env_file:
      - .env
    ports:
      - "127.0.0.1:${HOST_PORT_ADMINER}:8080"
    volumes:
      - adminer:/tmp

  app:
    build:
      context: .
      args:
        APP_DEBUG: $APP_DEBUG
        IS_PROD_BUILD: 0
        TIMEZONE: $TIMEZONE
    image: srigi/hace
    env_file:
      - .env
    depends_on:
      - database
    volumes:
      - ./.docker/php-dev.ini:/usr/local/etc/php/php.ini:ro
      - ./bin:/app/bin
      - ./config:/app/config
      - ./migrations:/app/migrations
      - ./src:/app/src
      - ./www:/app/www
      - ./var:/app/var
      - ./composer.json:/app/composer.json
      - ./composer.lock:/app/composer.lock

  migrations:
    image: srigi/hace
    env_file:
      - .env
    depends_on:
      - database
    volumes:
      - ./.docker/php-dev.ini:/usr/local/etc/php/php.ini:ro
      - ./bin:/app/bin
      - ./config:/app/config
      - ./migrations:/app/migrations
      - ./var:/app/var
    command: sh -c 'wait-for-it database:5432 && bin/console migrations:continue --no-interaction'

  parallel-lint:
    image: srigi/hace
    volumes:
      - ./.docker/php-dev.ini:/usr/local/etc/php/php.ini:ro
      - ./bin:/app/bin
      - ./config:/app/config
      - ./src:/app/src
      - ./www:/app/www
    command: bin/parallel-lint --no-progress -e php bin/ config/ migrations/ src/ www/

  phpcs:
    image: srigi/hace
    volumes:
      - ./.docker/php-dev.ini:/usr/local/etc/php/php.ini:ro
      - ./bin:/app/bin
      - ./config:/app/config
      - ./src:/app/src
      - ./www:/app/www
      - ./coding-standards.xml:/app/coding-standards.xml
    command: bin/phpcs --extensions=php --standard=coding-standards.xml

  phpstan:
    image: srigi/hace
    volumes:
      - ./.docker/php-dev.ini:/usr/local/etc/php/php.ini:ro
      - ./bin:/app/bin
      - ./config:/app/config
      - ./src:/app/src
      - ./var:/app/var
      - ./www:/app/www
      - ./phpstan.neon:/app/phpstan.neon
    command: bin/phpstan analyse -c phpstan.neon --no-progress --level 7 bin/console config/ src/ www/

  webserver:
    build:
      context: .
      dockerfile: Dockerfile.webserver
      args:
        FCGI_READ_TIMEOUT: $FCGI_READ_TIMEOUT
        WEBSERVER_TEMPLATE: 'webserver.template.dev.nginx'
    image: srigi/hace/webserver
    env_file:
      - .env
    depends_on:
      - app
    ports:
      - "127.0.0.1:${HOST_PORT_APP}:8000"
    volumes:
      - ./www:/app/www

  database:
    image: postgres:11-alpine
    environment:
      POSTGRES_PASSWORD: secret
    volumes:
      - database:/var/lib/postgresql/data

volumes:
  adminer:
  database:
